/*
 * Copyright 2013-2014 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */



buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.ajoberstar:gradle-git:0.11.2")
    }
}


import java.text.SimpleDateFormat
import org.ajoberstar.grgit.*

ext.buildenvironment = [
        commitId: determineCommitId(),
        username: System.properties["user.name"],
        hostname: determineHostName(),
        javaVersion: System.properties["java.version"],
        osName: System.properties["os.name"],
        osVersion: System.properties["os.version"],
        timeStamp: new SimpleDateFormat("yyyy.MM.dd").format(new Date())
]

def String determineCommitId() {
    def strategies = []

    def env = System.getenv()
    def commitId = null;

    // Builds of Gradle happening on the CI server
    strategies << {
        env["BUILD_VCS_NUMBER"]
    }

    // If it's a checkout, ask Git for it
    strategies << {
        ext.repo = Grgit.open(project.file('.'))
        return repo.head().id
    }

    for (strategy in strategies) {
        commitId = strategy()
        if (commitId) {
            break
        }
    }
    if (!commitId) {
        throw new InvalidUserDataException("Could not determine commit id") as Throwable
    }
    commitId
}

def String determineHostName() {
    def hostName
    try {
        hostName = InetAddress.localHost.hostName
    } catch (UnknownHostException ignored) {
        hostName = "unknown"
    }
    hostName
}