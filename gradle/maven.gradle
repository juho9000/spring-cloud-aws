/*
 * Copyright 2013-2014 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */







allprojects {

    apply plugin: 'maven'

    repositories {
        mavenCentral()
        maven { url 'http://repo.springsource.org/milestone' }
    }

    install {
        repositories.mavenInstaller {

            pom.whenConfigured {pom ->
                pom.dependencies.removeAll { it.scope == "test" }
            }

            pom.project {
                description = project.description
                url = "http://projects.spring.io/spring-cloud/"
                organization {
                    name = "Spring IO"
                    url = "http://spring.io"
                }
                licenses {
                    license {
                        name = "The Apache Software License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        distribution = "repo"
                    }
                }
                scm {
                    url = "https://github.com/aemruli/elasticspring"
                    connection = "scm:git:git://github.com/aemruli/elasticspring"
                    developerConnection = "scm:git:git://github.com/aemruli/elasticspring"
                }
                developers {
                    developer {
                        id = "aemruli"
                        name = "Agim Emruli"
                    }
                    developer {
                        id = "alainsahli"
                        name = "Alain Sahli"
                    }
                }
            }
        }
    }

    uploadArchives {
        if (project.hasProperty("S3_ACCESS_KEY") && project.hasProperty("S3_SECRET_KEY")) {
            configurations { deployerJars }
            dependencies {
                deployerJars "org.springframework.build:aws-maven:4.4.0.RELEASE"
            }

            repositories.mavenDeployer { deployer ->
                def repositoryUrl = 's3://repo.elasticspring.org/'
                configuration = configurations.deployerJars
                ext.s3credentials = [userName: S3_ACCESS_KEY, passphrase: S3_SECRET_KEY]
                repository(url: repositoryUrl) { authentication(s3credentials) }
                snapshotRepository(url: repositoryUrl) { authentication(s3credentials) }
            }
        }
    }
}